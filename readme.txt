Basically, the goal of this project was to create a way to parse the downloadable gospel library csv file.
It was quite a struggle because there were a lot of problems with the file format.
First of all, the downloaded csv file contains fancy quotation marks " that have a differet unicode, 157, than the typical one, 34, so when reading the file, python was raising unicode Exeptions. To fix this, the note_converting module reads in the csv file as binary and replaces all 157 byte values with 34. This fixes the problem. It puts the new file at a different file path so the original remains in tact.
Parsing the file was extremely difficult because it was nearly impossible to use one simple solution.
First of all, in the csv file, the note text sometime has commas, which made simple comma splitting an unreliable technique.
Second, although the note text usually starts with quotation marks ", this was not always the case. Also, there were times where quotation marks would be used in the note text, making the identification of quotation marks an unreliable way to go.
Third, in several instances, the line of the csv file would actually be broken up into multiple lines(likely because of the use of newline characters in the original note but I'm not sure). This made it hard to parse as well

To fix this I used create the Note and NotePile classes. When a Note instance is created, it automatically parses the note. If it cant be parsed, the note remains as it is. I used a regular expression that uses the ^ and $ features to isolate the note text and identify it as a parsable string.

The NotePile class is basically a glorified list object that is specific for Note objects. It contains a list attribute with all the Note objects. And contains a method that concatenates succesive unparsable Note strings in the NotePile together to create the actual parsable Note object. This solves the issue of the lines being broken up in the csv file. It important to note that this method only works given that an unparsable Note object will be followed by other unparsable Note objects with the cabability to create the correct Note object. This was the case in all the data that I observed for the csv file download.

There are a lot of things that could be done with this. All this does is parse the csv file. It'd be cool to eventually look at using the parsed file to display gospel library notes in a more user friendly way. It'd also be cool to look seeing if we can create our own notes, fix them an then reupload the notes to the church for them to put it in the system. Many gospel library notes have been corrputed in the past; this would be useful. Another thing to look at would be taking the html tags out of the notes for greater clarity. There's a lot of ways that this project could continue to help latter day saints parse and use their gospel library notes locally.